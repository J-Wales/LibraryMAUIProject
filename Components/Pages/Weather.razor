@using MySqlConnector;
@page "/weather"

<h1>Books</h1>

<p>This component demonstrates showing data.</p>

@if (books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Author</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.bookID</td>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <button class="btn btn-primary" type="button" @onclick="() => AddCart(book)">Rent</button>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Book[]? books;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate a loading indicator
        await Task.Delay(500);
        /*
        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 10).Select(index => new WeatherForecast
            {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
        */

        MySqlConnectionStringBuilder builder =
               new MySqlConnectionStringBuilder
                   {
                       // Set the server address to "localhost"
                       Server = "localhost",
                       // Set the user ID to "root"
                       UserID = "root",
                       // Set the password to "OOP2@"
                       Password = "Iforgot100",
                       // Set the database name to "demo1"
                       Database = "librarydatabase",
                   };

        MySqlConnection connection =
       new MySqlConnection(builder.ConnectionString);

        connection.Open();

        string sql = "SELECT * FROM books";

        MySqlCommand command = new MySqlCommand(sql, connection);

        List<Book> list = new List<Book>();
        
        using (MySqlDataReader reader = command.ExecuteReader())
        {
            while (reader.Read())
            {
                // Get the integer value from the first column (index 0) and assign it to the variable id
                int id = reader.GetInt32(0);

                // Get the string value from the second column (index 1) and assign it to the variable name
                string title = reader.GetString(1);

                // Get the double value from the third column (index 2) and assign it to the variable gpa
                string author = reader.GetString(2);

                int available = reader.GetInt32(3);

                if (available == 1)
                {
                    list.Add(new Book(id, title, author, available));
                }
                //  -5, -20, and -10 specify the minimum width of each column, and the negative sign indicates left alignment
            }
        }

        books = list.ToArray();

        connection.Close();

    }
    public void AddCart(Book book)
    {
        MySqlConnectionStringBuilder builder =
               new MySqlConnectionStringBuilder
                   {
                       // Set the server address to "localhost"
                       Server = "localhost",
                       // Set the user ID to "root"
                       UserID = "root",
                       // Set the password to "OOP2@"
                       Password = "Iforgot100",
                       // Set the database name to "demo1"
                       Database = "librarydatabase",
                   };

        MySqlConnection connection =
       new MySqlConnection(builder.ConnectionString);

        connection.Open();

        string sql = "INSERT INTO rentalbooks (rentalID, bookID) VALUES ()";

        MySqlCommand command = new MySqlCommand(sql, connection);

        command.ExecuteNonQuery();
    }
}
